generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  portfolio Portfolio?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Portfolio {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int              @unique
  portfolioShares PortfolioShare[]
  trades          Trade[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model PortfolioShare {
  id          Int       @id @default(autoincrement())
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId Int
  share       Share     @relation(fields: [shareId], references: [id])
  shareId     Int
  quantity    Float     @default(0.0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([portfolioId, shareId])
}

model Share {
  id              Int              @id @default(autoincrement())
  symbol          String           @unique @db.VarChar(3)
  price           Decimal          @db.Decimal(10, 2)
  trades          Trade[]
  portfolioShares PortfolioShare[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@index([symbol])
  @@index([price])
  @@index([symbol, price])
}

model Trade {
  id          Int       @id @default(autoincrement())
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId Int
  share       Share     @relation(fields: [shareId], references: [id])
  shareId     Int
  quantity    Float
  price       Decimal   @db.Decimal(10, 2)
  type        TradeType
  createdAt   DateTime  @default(now())

  @@index([portfolioId])
  @@index([shareId])
}

enum TradeType {
  BUY
  SELL
}
